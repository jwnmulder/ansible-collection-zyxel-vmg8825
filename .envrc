# inspired by https://github.com/getsentry/sentry/blob/master/.envrc
# TODO: Check https://stackoverflow.com/questions/59127258/how-can-i-use-pip-cache-in-github-actions
set -euo pipefail

direnv_version 2.21

VIRTUAL_ENV=$PWD/.venv

# Setting strict-mode doesn't work for really old direnv versions. This however does
if [ ! $? -eq 0 ]; then
  echo "Way to old direnv version (missing direnv_version), please upgrade first"
  exit 1
fi

bold="$(tput bold)"
red="$(tput setaf 1)"
green="$(tput setaf 2)"
yellow="$(tput setaf 3)"
reset="$(tput sgr0)"

info() {
    echo -e "${bold}${*}${reset}"
}

warn() {
    echo -e "${yellow}${*}${reset}" >&2
    log_level="warning"
}

die() {
    echo -e "${red}${bold}FATAL: ${*}${reset}" >&2
    error_message=("${@}")
    log_level="error"
    return 1
}

local outdated=false
local req_hash=$(sha256sum $PWD/requirements.txt | cut -c1-8)

if [ ! -f "${VIRTUAL_ENV}/setup-done-$req_hash" ]; then
    outdated=true
    warn "${bold}need${reset} to run install/update scripts (it can take a few minutes)"
    echo -e "\n[10 sec] Continue (Y/n)?"
    read -t 10 -r resp || true
    case "$resp" in
    n | N) die "Aborted!" ;;
    *)
       echo "Okay, let's do this."
       ;;
    esac
fi

if [ "$outdated" = true ]; then
    scripts/ensure-venv.sh "${VIRTUAL_ENV}"

    touch ${VIRTUAL_ENV}/setup-done-$req_hash
fi

export VIRTUAL_ENV
PATH_add "${VIRTUAL_ENV}/bin"
