set -euo pipefail

direnv_version 2.21

VIRTUAL_ENV=$PWD/.venv

# Setting strict-mode doesn't work for really old direnv versions. This however does
if [ ! $? -eq 0 ]; then
  echo "Way to old direnv version (missing direnv_version), please upgrade first"
  exit 1
fi

bold="$(tput bold)"
red="$(tput setaf 1)"
green="$(tput setaf 2)"
yellow="$(tput setaf 3)"
reset="$(tput sgr0)"

info() {
    echo -e "${bold}${*}${reset}"
}

warn() {
    echo -e "${yellow}${*}${reset}" >&2
    log_level="warning"
}

die() {
    echo -e "${red}${bold}FATAL: ${*}${reset}" >&2
    error_message=("${@}")
    log_level="error"
    return 1
}

install_approved=false
continue_or_die() {

    if [ "$install_approved" != "true" ]; then
        warn "${bold}need${reset} to run install/update scripts (it can take a few minutes)"
        echo -e "\n[10 sec] Continue (Y/n)?"
        read -t 10 -r resp || true
        case "$resp" in
        n | N) die "Aborted!" ;;
        *)
        echo "Okay, let's do this."
        install_approved=true
        ;;
        esac
    fi
}

local req_hash=$(sha256sum $PWD/requirements.txt | cut -c1-8)
if [ ! -f "${VIRTUAL_ENV}/setup-venv-done-$req_hash" ]; then

    continue_or_die

    scripts/ensure-venv.sh "${VIRTUAL_ENV}"

    find "${VIRTUAL_ENV}" -maxdepth 1 -name 'setup-venv-done-*' -delete
    touch "${VIRTUAL_ENV}/setup-venv-done-$req_hash"
fi

export VIRTUAL_ENV
PATH_add "${VIRTUAL_ENV}/bin"

local galaxy_hash=$(sha256sum $PWD/galaxy.yml | cut -c1-8)
if [ ! -f "${VIRTUAL_ENV}/setup-galaxy-done-$galaxy_hash" ]; then

    continue_or_die

    collections_dir=$(readlink -f "$(pwd)/../../")
    collections_dir_name=$(basename "$collections_dir")
    if [ "${collections_dir_name}" != "ansible_collections" ]; then
        echo "Not a ansible_collections dir. git repo needs to be cloned in ./ansible_collections/jwnmulder/zyxel_vmg8825. Got: ${collections_dir}"
        exit 1
    fi

    # Set ANSIBLE_COLLECTIONS_PATHS to avoid some warnings
    export ANSIBLE_COLLECTIONS_PATHS="$collections_dir"

    ansible-galaxy collection install --upgrade ansible.netcommon -p "$collections_dir"

    find "${VIRTUAL_ENV}" -maxdepth 1 -name 'setup-galaxy-done-*' -delete
    touch "${VIRTUAL_ENV}/setup-galaxy-done-$galaxy_hash"
fi
