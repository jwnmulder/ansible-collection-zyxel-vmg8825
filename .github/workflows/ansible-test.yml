# Based upon https://github.com/ansible-collections/collection_template/blob/main/.github/workflows/ansible-test.yml
name: CI
on:
  # Run CI against all pushes (direct commits, also merged PRs), Pull Requests
  push:
    branches:
      - main
      - stable-*
  pull_request:
  # Run CI once per day (at 06:00 UTC)
  # This ensures that even if there haven't been commits that we are still
  # testing against latest version of ansible-test for each ansible-core
  # version
  schedule:
    - cron: '0 6 * * *'

concurrency:
  group: >-
    ${{ github.workflow }}-${{
      github.event.pull_request.number || github.sha
    }}
  cancel-in-progress: true

jobs:

###
# Sanity tests (REQUIRED)
#
# https://docs.ansible.com/ansible/latest/dev_guide/testing_sanity.html

  sanity:
    name: Sanity (Ⓐ${{ matrix.ansible }})
    strategy:
      matrix:
        ansible:
          - stable-2.16
          - stable-2.17
          - stable-2.18
          - devel
    runs-on: ubuntu-latest

    steps:
      - name: Perform sanity testing
        uses: ansible-community/ansible-test-gh-action@release/v1
        with:
          ansible-core-version: ${{ matrix.ansible }}
          testing-type: sanity
          test-deps: >-
            ansible.netcommon
            ansible.utils
          pull-request-change-detection: false
          coverage: never

###
# Unit tests (OPTIONAL)
#
# https://docs.ansible.com/ansible/latest/dev_guide/testing_units.html

  units:
    runs-on: ubuntu-latest

    name: Units (Ⓐ${{ matrix.ansible }})
    strategy:
      fail-fast: false
      matrix:
        ansible:
          - stable-2.16
          - stable-2.17
          - stable-2.18
          - devel

    steps:
      - name: >-
          Perform unit testing against
          Ansible version ${{ matrix.ansible }}
        uses: ansible-community/ansible-test-gh-action@release/v1
        with:
          ansible-core-version: ${{ matrix.ansible }}
          testing-type: units
          test-deps: >-
            ansible.netcommon
            ansible.utils
          pull-request-change-detection: false
          coverage: never

###
# Integration tests (RECOMMENDED)
#
# https://docs.ansible.com/ansible/latest/dev_guide/testing_integration.html


# If the application you are testing is available as a docker container and you want to test
# multiple versions see the following for an example:
# https://github.com/ansible-collections/community.zabbix/tree/master/.github/workflows

  integration:
    runs-on: ubuntu-latest

    name: I (Ⓐ${{ matrix.ansible }}+py${{ matrix.python }})
    strategy:
      fail-fast: false
      matrix:
        ansible:
          - devel
        python:
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'
          - '3.13'
        include:
          # Add new versions announced in
          # https://github.com/ansible-collections/news-for-maintainers in a timely manner,
          # consider dropping testing against EOL versions and versions you don't support.
          # ansible-core 2.16
          - ansible: stable-2.16
            python: '2.7'
          - ansible: stable-2.16
            python: '3.6'
          - ansible: stable-2.16
            python: '3.7'
          - ansible: stable-2.16
            python: '3.8'
          - ansible: stable-2.16
            python: '3.9'
          - ansible: stable-2.16
            python: '3.10'
          - ansible: stable-2.16
            python: '3.11'
          - ansible: stable-2.16
            python: '3.12'
          # ansible-core 2.17
          - ansible: stable-2.17
            python: '3.7'
          - ansible: stable-2.17
            python: '3.8'
          - ansible: stable-2.17
            python: '3.9'
          - ansible: stable-2.17
            python: '3.10'
          - ansible: stable-2.17
            python: '3.11'
          - ansible: stable-2.17
            python: '3.12'
          # ansible-core 2.18
          - ansible: stable-2.18
            python: '3.8'
          - ansible: stable-2.18
            python: '3.9'
          - ansible: stable-2.18
            python: '3.10'
          - ansible: stable-2.18
            python: '3.11'
          - ansible: stable-2.18
            python: '3.12'
          - ansible: stable-2.18
            python: '3.13'


    steps:
      - name: >-
          Perform integration testing against
          Ansible version ${{ matrix.ansible }}
          under Python ${{ matrix.python }}
        uses: ansible-community/ansible-test-gh-action@release/v1
        with:
          ansible-core-version: ${{ matrix.ansible }}
          target-python-version: ${{ matrix.python }}
          testing-type: integration
          test-deps: >-
            ansible.netcommon
            ansible.utils
          pull-request-change-detection: false
          coverage: never


  check:  # This job does nothing and is only used for the branch protection
          # or multi-stage CI jobs, like making sure that all tests pass before
          # a publishing job is started.
    if: always()

    needs:
      - sanity
      - units
      - integration

    runs-on: ubuntu-latest

    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
