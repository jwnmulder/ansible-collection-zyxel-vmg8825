name: CI
on:
  # Run CI against all pushes (direct commits, also merged PRs), Pull Requests
  push:
  pull_request:
  # Run CI once per day (at 06:00 UTC)
  # This ensures that even if there haven't been commits that we are still testing against latest version of ansible-test for each ansible-base version
  schedule:
    - cron: '0 6 * * *'
env:
  NAMESPACE: jwnmulder
  COLLECTION_NAME: zyxel_vmg8825

jobs:
  sanity:
    name: Sanity (Ⓐ${{ matrix.ansible }})
    strategy:
      fail-fast: false
      matrix:
        python:
          - 3.8
        ansible:
          - stable-2.9
          - stable-2.10
          - stable-2.11
          - devel
    runs-on: ubuntu-latest
    steps:

      - name: Check out code
        uses: actions/checkout@v2
        with:
          path: ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      # - name: Cache packages
      #   uses: actions/cache@v2
      #   with:
      #     path: |
      #       ~/.cache/pip
      #       ~/.local/lib/python${{ matrix.python }}
      #       ~/.ansible/collection
      #     key: ${{ runner.os }}-packages-${{ matrix.python }}-${{ hashFiles('./ansible_collections/jwnmulder/zyxel_vmg8825/.github/requirements.txt') }}
      #     #restore-keys: |
      #     #  ${{ runner.os }}-packages-${{ matrix.python }}-
      #     #  ${{ runner.os }}-packages-
      #     #  ${{ runner.os }}-

      - uses: webfactory/ssh-agent@v0.5.2
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY_PYTHON_ZYXELCLIENT_VMG8825 }}

      - name: Install ansible-base (${{ matrix.ansible }})
        run: pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible }}.tar.gz --disable-pip-version-check

      - name: Install collection dependencies
        run: ansible-galaxy collection install ansible.netcommon ansible.utils -p .

      - name: Run sanity tests
        run: ansible-test sanity --docker -v --color --python ${{ matrix.python }}
        working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}

  units:
    runs-on: ubuntu-latest
    name: Units (Ⓐ${{ matrix.ansible }})
    strategy:
      fail-fast: false
      matrix:
        python:
          - 3.8
        ansible:
          - stable-2.9
          - stable-2.10
          - stable-2.11
          - devel

    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          path: ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          # it is just required to run that once as "ansible-test units" in the docker image
          # will run on all python versions it supports.
          python-version: ${{ matrix.python }}

      # - name: Cache packages
      #   uses: actions/cache@v2
      #   with:
      #     path: |
      #       ~/.cache/pip
      #       ~/.local/lib/python${{ matrix.python }}
      #       ~/.ansible/collection
      #     key: ${{ runner.os }}-packages-${{ matrix.python }}-${{ hashFiles('./ansible_collections/jwnmulder/zyxel_vmg8825/.github/requirements.txt') }}
      #     #restore-keys: |
      #     #  ${{ runner.os }}-packages-${{ matrix.python }}-
      #     #  ${{ runner.os }}-packages-
      #     #  ${{ runner.os }}-

      - uses: webfactory/ssh-agent@v0.5.2
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY_PYTHON_ZYXELCLIENT_VMG8825 }}

      - name: Install ansible-base (${{ matrix.ansible }})
        run: pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible }}.tar.gz --disable-pip-version-check

      - name: Install collection dependencies
        run: ansible-galaxy collection install ansible.netcommon ansible.utils -p .

      - name: Run unit test
        run: ansible-test units -v --color --venv --python ${{ matrix.python }}
        working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}

        # ansible-test support producing code coverage date
      - name: Generate coverage report
        run: ansible-test coverage xml -v --requirements --group-by command --group-by version
        working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}
