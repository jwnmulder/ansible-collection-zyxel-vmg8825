name: release

on:
  release:
    types:
      - published
  workflow_dispatch:

jobs:
  release:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      # - name: Wait on tests
      #   uses: lewagon/wait-on-check-action@v0.2
      #   with:
      #     ref: ${{ github.ref }}
      #     repo-token: ${{ secrets.GITHUB_TOKEN }}
      #     wait-interval: 10
      #     running-workflow-name: 'ansible-test'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Ensure that `version:` in `galaxy.yml` matches `GITHUB_REF`
        id: version
        run: |
          [ "$(cat galaxy.yml | grep version: | awk '{print $2}')" = $(awk -F '/' '{print substr($3, 1)}' <<< ${GITHUB_REF}) ] || exit 1
          echo "version=$(awk -F '/' '{print substr($3, 1)}' <<< ${GITHUB_REF})" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install wheel
          python -m pip install ansible-core antsibull-changelog

      - name: Ensure that there is a changelog for a matching version in `galaxy.yml
        run: |
          antsibull-changelog release --version=${{ steps.version.outputs.version }}

          changelog_status=$(git status CHANGELOG.rst --porcelain)
          if [[ ! -z "${changelog_status}" ]]; then
            echo "CHANGELOG.rst not up-to-date for release ${{ steps.version.outputs.version }}"
            echo "Run 'antsibull-changelog release' first"
          fi

      - name: Build ansible collection
        run: |
          ansible-galaxy collection build

      - name: Publish ansible collection
        run: |
          ansible-galaxy collection publish --api-key ${{ secrets.GALAXY_API_KEY }} "./jwnmulder-zyxel_vmg8825-${{ steps.version.outputs.version }}.tar.gz"
